// Command Service - ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏ö‡∏≠‡∏ó

import { BotCommand } from '@/types';
import { TaskService } from './TaskService';
import { UserService } from './UserService';
import { FileService } from './FileService';
import { FlexMessageDesignSystem } from './FlexMessageDesignSystem';
import { config } from '@/utils/config';
import { serviceContainer } from '@/utils/serviceContainer';
import { logger } from '@/utils/logger';
import { formatFileSize } from '@/utils/common';
import { UrlBuilder } from '@/utils/urlBuilder';
import { KPIService } from './KPIService';

export class CommandService {
  private taskService: TaskService;
  private userService: UserService;
  private fileService: FileService;
  private kpiService: KPIService;

  constructor() {
    this.taskService = serviceContainer.get<TaskService>('TaskService');
    this.userService = serviceContainer.get<UserService>('UserService');
    this.fileService = serviceContainer.get<FileService>('FileService');
    this.kpiService = serviceContainer.get<KPIService>('KPIService');
  }

  /**
   * ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å
   */
  public async executeCommand(command: BotCommand): Promise<string | any> {
    try {
      logger.info('Executing command:', { command: command.command, args: command.args });

      switch (command.command) {
        case '/setup':
          return await this.handleSetupCommand(command);

        case '/help':
          return this.getHelpMessage();

        case '/whoami':
          return await this.handleWhoAmICommand(command);

        case '/leaderboard':
        case '/kpi':
        case '/‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô':
        case '/‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥':
          return await this.handleLeaderboardCommand(command);

        case '/stats':
        case '/‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå':
          return await this.handleWeeklyStatsCommand(command);

        case '‡πÄ‡∏ã‡∏ü‡πÑ‡∏ü‡∏•‡πå':
        case '/‡πÄ‡∏ã‡∏ü‡πÑ‡∏ü‡∏•‡πå':
          return await this.handleSaveFilesCommand(command);

        case '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô':
        case 'add':
          return await this.handleAddTaskCommand(command);

        case '/delete':
          return await this.handleDeleteAllTasksCommand(command);

        default:
          return `‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á "${command.command}" ‡∏Ñ‡πà‡∏∞\n‡∏û‡∏¥‡∏°‡∏û‡πå "@‡πÄ‡∏•‡∏Ç‡∏≤ /help" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î`;
      }

    } catch (error) {
      logger.error('Error executing command:', error);
      return '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
    }
  }

  /**
   * ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /setup - ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ Dashboard
   */
  private async handleSetupCommand(command: BotCommand): Promise<string> {
    try {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡πá‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤)
      if (command.mentions && command.mentions.length > 0) {
        return await this.handleSetupSupervisors(command);
      }

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå Dashboard ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ userId
      const dashboardUrl = UrlBuilder.getDashboardUrl(command.groupId, {
        userId: command.userId
      });

      return `üîß Dashboard ‡πÄ‡∏•‡∏Ç‡∏≤‡∏ö‡∏≠‡∏ó

üìä ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ Dashboard:
${dashboardUrl}

üéØ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å:
‚Ä¢ üìã ‡∏á‡∏≤‡∏ô: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô/‡πÅ‡∏Å‡πâ‡∏á‡∏≤‡∏ô/‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î/‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô
‚Ä¢ üîÅ ‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥: ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå/‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)
‚Ä¢ üìé ‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô: ‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå/‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ ‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó
‚Ä¢ ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏á‡∏≤‡∏ô: ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥/‡∏ï‡∏µ‡∏Å‡∏•‡∏±‡∏ö + ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡πá‡∏ô + ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á‡πÉ‡∏´‡∏°‡πà
‚Ä¢ ‚è∞ ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô/‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°: ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î/‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î/‡∏ï‡∏£‡∏ß‡∏à‡∏•‡πà‡∏≤‡∏ä‡πâ‡∏≤
‚Ä¢ üìÅ ‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏ü‡∏•‡πå: ‡πÅ‡∏¢‡∏Å "‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô/‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß"
‚Ä¢ üèÜ Leaderboard & KPI: ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏•‡∏∏‡πà‡∏°
‚Ä¢ ‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°/‡πÄ‡∏Ç‡∏ï‡πÄ‡∏ß‡∏•‡∏≤/‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô

üìä ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤ (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç):
‡∏û‡∏¥‡∏°‡∏û‡πå "@‡πÄ‡∏•‡∏Ç‡∏≤ /setup @‡∏ô‡∏≤‡∏¢‡πÄ‡∏≠ @‡∏ô‡∏≤‡∏¢‡∏ö‡∏µ" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤
‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡πà‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ï‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤‡πÉ‡∏´‡πâ‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏ß‡∏•‡∏≤ 08:00 ‡∏ô.`;

    } catch (error) {
      logger.error('Error in setup command:', error);
      return '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå Dashboard ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà';
    }
  }

  /**
   * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤
   */
  private async handleSetupSupervisors(command: BotCommand): Promise<string> {
    try {
      const groupId = command.groupId;
      const supervisorIds = command.mentions || [];
      
      if (supervisorIds.length === 0) {
        return '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏ó‡πá‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤\n\nüìä ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡πà‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ï‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤‡πÉ‡∏´‡πâ‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏ß‡∏•‡∏≤ 08:00 ‡∏ô.\n\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: /setup @‡∏ô‡∏≤‡∏¢‡πÄ‡∏≠ @‡∏ô‡∏≤‡∏¢‡∏ö‡∏µ';
      }

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤‡πÑ‡∏î‡πâ)
      const isAdmin = await this.userService.isUserAdminInGroup(command.userId, groupId);
      if (!isAdmin) {
        return '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤ (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)';
      }

      // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°
      const success = await this.taskService.updateGroupSupervisors(groupId, supervisorIds);
      
      if (success) {
        const supervisorNames = supervisorIds.map(id => `@${id}`).join(' ');
        return `‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!

üë• ‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤:
${supervisorNames}

üìä ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡πà‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ï‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤‡πÉ‡∏´‡πâ‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏ß‡∏•‡∏≤ 08:00 ‡∏ô.

üí° ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /setup ‡πÅ‡∏ó‡πá‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà`;
      } else {
        return '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
      }

    } catch (error) {
      logger.error('Error in setup supervisors command:', error);
      return '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà';
    }
  }

  /**
   * ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /help - ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
   */
  private getHelpMessage(): string {
    return `üìñ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏•‡∏Ç‡∏≤‡∏ö‡∏≠‡∏ó (‡∏™‡∏£‡∏∏‡∏õ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)

üîß ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
‚Ä¢ /setup ‚Äì ‡πÄ‡∏õ‡∏¥‡∏î Dashboard ‡∏Å‡∏•‡∏∏‡πà‡∏°: ‡∏á‡∏≤‡∏ô/‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥/‡πÑ‡∏ü‡∏•‡πå/Leaderboard/‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
‚Ä¢ /setup @‡∏ô‡∏≤‡∏¢‡πÄ‡∏≠ @‡∏ô‡∏≤‡∏¢‡∏ö‡∏µ ‚Äì ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤ (‡∏™‡πà‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå 08:00)
‚Ä¢ /whoami ‚Äì ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô (‡∏≠‡∏µ‡πÄ‡∏°‡∏•/‡πÄ‡∏Ç‡∏ï‡πÄ‡∏ß‡∏•‡∏≤/‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó)

üìä KPI & ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö
‚Ä¢ /leaderboard ‡∏´‡∏£‡∏∑‡∏≠ /kpi ‡∏´‡∏£‡∏∑‡∏≠ /‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ /‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ ‚Äì ‡∏î‡∏π‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö KPI ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°
‚Ä¢ /stats ‡∏´‡∏£‡∏∑‡∏≠ /‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå ‚Äì ‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°

üìã ‡∏á‡∏≤‡∏ô (‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó)
‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô "‡∏ä‡∏∑‡πà‡∏≠‡∏á‡∏≤‡∏ô" @‡∏Ñ‡∏ô @me due 25/12 14:00 ‚Äì ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡πá‡∏ß
‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô ‚Äì ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô
‚Ä¢ /delete ‚Äì ‡∏•‡∏ö‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° (‡∏£‡∏µ‡πÄ‡∏ã‡∏ï) - ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ admin

üìÅ ‡πÑ‡∏ü‡∏•‡πå
‚Ä¢ ‡πÄ‡∏ã‡∏ü‡πÑ‡∏ü‡∏•‡πå ‚Äì ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î

üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö
‚Ä¢ ‡πÉ‡∏ä‡πâ #‡πÅ‡∏ó‡πá‡∏Å ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
‚Ä¢ ‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥ (‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô) ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô Dashboard ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
‚Ä¢ Dashboard: ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /setup ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ñ‡∏∏‡∏ì
‚Ä¢ üìä ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤: /setup @‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô1 @‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô2 (‡∏™‡πà‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå 08:00)
‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô, ‡∏ï‡∏£‡∏ß‡∏à‡∏á‡∏≤‡∏ô, ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô) ‡πÉ‡∏ä‡πâ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå`;
  }

















  /**
   * ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô - ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô
   */
  private async handleAddTaskCommand(command: BotCommand): Promise<string | any> {
    try {
      // ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡πÅ‡∏ä‡∏ó)
      const newTaskUrl = UrlBuilder.getNewTaskUrl(command.groupId, command.userId);

      const content = [
        FlexMessageDesignSystem.createText(
          '‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏≤‡∏ô (‡∏ä‡∏∑‡πà‡∏≠‡∏á‡∏≤‡∏ô ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö ‡πÅ‡∏ó‡πá‡∏Å ‡∏Ø‡∏•‡∏Ø) ‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥',
          'sm',
          FlexMessageDesignSystem.colors.textSecondary,
          undefined,
          true
        ),
        FlexMessageDesignSystem.createText(
          'üìù ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥',
          'xs',
          FlexMessageDesignSystem.colors.primary,
          undefined,
          true
        )
      ];

      const buttons = [
        FlexMessageDesignSystem.createButton('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà', 'uri', newTaskUrl, 'primary'),
        FlexMessageDesignSystem.createButton(
          '‡πÄ‡∏õ‡∏¥‡∏î Dashboard ‡∏Å‡∏•‡∏∏‡πà‡∏°',
          'uri',
          UrlBuilder.getDashboardUrl(command.groupId, { userId: command.userId }),
          'secondary'
        )
      ];

      const flexMessage = FlexMessageDesignSystem.createStandardTaskCard(
        '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà',
        '‚ûï',
        FlexMessageDesignSystem.colors.primary,
        content,
        buttons,
        'compact'
      );

      return flexMessage;
    } catch (error) {
      logger.error('Error generating add task card:', error);
      return '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà';
    }
  }



  /**
   * ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ã‡∏ü‡πÑ‡∏ü‡∏•‡πå - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
   */
  private async handleSaveFilesCommand(command: BotCommand): Promise<string | any> {
    try {
      const groupId = command.groupId;
      const userId = command.userId;

      // ‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
      const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000);
      
      // ‡πÉ‡∏ä‡πâ FileService ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
      const { files } = await this.fileService.getGroupFiles(groupId, { 
        limit: 50,
        startDate: oneHourAgo
      });

      if (files.length === 0) {
        return '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ñ‡πà‡∏∞ üìÅ';
      }

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏ú‡∏π‡∏Å‡∏á‡∏≤‡∏ô
      const fileContents = files.slice(0, 5).map(file => 
        FlexMessageDesignSystem.createBox('horizontal', [
          FlexMessageDesignSystem.createText(`üìÑ ${file.originalName}`, 'sm', FlexMessageDesignSystem.colors.textPrimary),
          FlexMessageDesignSystem.createText(formatFileSize(file.size), 'xs', FlexMessageDesignSystem.colors.textSecondary)
        ])
      );

      const content = [
        FlexMessageDesignSystem.createText('‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ', 'sm', FlexMessageDesignSystem.colors.textSecondary, undefined, true),
        ...fileContents
      ];

      const buttons = [
        FlexMessageDesignSystem.createButton(
          '‡∏ú‡∏π‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏±‡∏ö‡∏á‡∏≤‡∏ô',
          'postback',
          `action=link_files&fileIds=${files.map(f => f.id).join(',')}`,
          'primary'
        ),
        FlexMessageDesignSystem.createButton(
          '‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
          'postback',
          `action=view_saved_files&fileIds=${files.map(f => f.id).join(',')}`,
          'secondary'
        )
      ];

      const flexMessage = FlexMessageDesignSystem.createStandardTaskCard(
        `üìÅ ‡πÄ‡∏ã‡∏ü‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (${files.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)`,
        'üìÅ',
        FlexMessageDesignSystem.colors.success,
        content,
        buttons,
        'compact'
      );

      return flexMessage;

    } catch (error) {
      logger.error('Error in save files command:', error);
      return '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ã‡∏ü‡πÑ‡∏ü‡∏•‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
    }
  }

  /**
   * ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /delete - ‡∏•‡∏ö‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° (‡∏£‡∏µ‡πÄ‡∏ã‡∏ï)
   */
  private async handleDeleteAllTasksCommand(command: BotCommand): Promise<string> {
    try {
      const groupId = command.groupId;
      const userId = command.userId;

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏ö‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏î‡πâ)
      const isAdmin = await this.userService.isUserAdminInGroup(userId, groupId);
      if (!isAdmin) {
        return '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)';
      }

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const { tasks } = await this.taskService.getGroupTasks(groupId);
      if (tasks.length === 0) {
        return 'üìã ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏•‡∏ö‡∏Ñ‡πà‡∏∞';
      }

      // ‡∏•‡∏ö‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°
      let deletedCount = 0;
      for (const task of tasks) {
        try {
          await this.taskService.deleteTask(task.id);
          deletedCount++;
        } catch (error) {
          logger.warn(`Failed to delete task ${task.id}:`, error);
        }
      }

      return `üóëÔ∏è ‡∏•‡∏ö‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!

üìä ‡∏™‡∏£‡∏∏‡∏õ:
‚Ä¢ ‡∏•‡∏ö‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${deletedCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
‚Ä¢ ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß
‚Ä¢ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ñ‡∏π‡∏Å‡∏£‡∏µ‡πÄ‡∏ã‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢

üí° ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏ö‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢`;

    } catch (error) {
      logger.error('Error in delete all tasks command:', error);
      return '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏á‡∏≤‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
    }
  }

  /**
   * ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /whoami - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
   */
  private async handleWhoAmICommand(command: BotCommand): Promise<string> {
    try {
      const user = await this.userService.findByLineUserId(command.userId);
      
      if (!user) {
        return '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°';
      }

      const groups = await this.userService.getUserGroups(user.id);
      const currentGroup = groups.find(g => g.lineGroupId === command.groupId);

      let response = `üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì\n\n`;
      response += `üì± ‡∏ä‡∏∑‡πà‡∏≠ LINE: ${user.displayName}\n`;
      
      if (user.realName) {
        response += `üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á: ${user.realName}\n`;
      }
      
      if (user.email) {
        response += `üìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${user.email} ‚úÖ\n`;
      } else {
        response += `üìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡∏¥‡∏á‡∏Å‡πå ‚ùå\n`;
      }

      response += `üåç ‡πÄ‡∏Ç‡∏ï‡πÄ‡∏ß‡∏•‡∏≤: ${user.timezone}\n`;
      
      if (currentGroup) {
        response += `üëë ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: ${currentGroup.role === 'admin' ? '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•' : '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å'}\n`;
      }

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (‡πÄ‡∏ß‡πá‡∏ö) ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
      const profileUrl = `${config.baseUrl}/dashboard/profile?lineUserId=${encodeURIComponent(command.userId)}`;
      response += `\n\nüîó ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (‡πÄ‡∏ß‡πá‡∏ö): ${profileUrl}`;

      if (!user.email) {
        response += `\nüìß ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô`;
      }

      return response;

    } catch (error) {
      logger.error('Error in whoami command:', error);
      return '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•';
    }
  }

  /**
   * ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /leaderboard, /kpi, /‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô, /‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ - ‡πÅ‡∏™‡∏î‡∏á KPI ‡πÅ‡∏•‡∏∞ Leaderboard
   */
  private async handleLeaderboardCommand(command: BotCommand): Promise<string | any> {
    try {
      const groupId = command.groupId;
      
      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Leaderboard ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ
      const leaderboard = await this.kpiService.getGroupLeaderboard(groupId, 'weekly');
      
      if (!leaderboard || leaderboard.length === 0) {
        return `üìä ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• KPI ‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ

üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô KPI
üì± ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà

üéÜ ‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: POST /api/kpi/sample/${groupId}`;
      }

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡πÅ‡∏™‡∏î‡∏á Leaderboard
      const content: any[] = [
        FlexMessageDesignSystem.createText('üèÜ ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö KPI ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ', 'lg', FlexMessageDesignSystem.colors.primary, 'bold'),
        FlexMessageDesignSystem.createText('‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à (0-100)', 'sm', FlexMessageDesignSystem.colors.textSecondary)
      ];

      // ‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö 1-3
      const topUsers = leaderboard.slice(0, 3);
      topUsers.forEach((user: any, index: number) => {
        const rank = index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : 'ü•â';
        const points = user.weeklyPoints || user.totalPoints || 0;
        const tasks = user.tasksCompleted || 0;
        
        content.push(
          FlexMessageDesignSystem.createBox('horizontal', [
            FlexMessageDesignSystem.createText(`${rank} ${user.displayName}`, 'sm', FlexMessageDesignSystem.colors.textPrimary),
            FlexMessageDesignSystem.createText(`${points.toFixed(1)} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‚Ä¢ ${tasks} ‡∏á‡∏≤‡∏ô`, 'xs', FlexMessageDesignSystem.colors.textSecondary)
          ])
        );
      });

      // ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ LINE User ID
      const currentUser = await this.userService.findByLineUserId(command.userId);
      let userInLeaderboard: any = null;
      
      if (currentUser) {
        userInLeaderboard = leaderboard.find((u: any) => u.userId === currentUser.id) || null;
      }
      
      if (userInLeaderboard) {
        const rank = userInLeaderboard.rank;
        const points = userInLeaderboard.weeklyPoints || userInLeaderboard.totalPoints || 0;
        const tasks = userInLeaderboard.tasksCompleted || 0;
        
        content.push(
          FlexMessageDesignSystem.createText('', 'xs', FlexMessageDesignSystem.colors.textSecondary),
          FlexMessageDesignSystem.createText(`üë§ ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà ${rank}`, 'sm', FlexMessageDesignSystem.colors.primary),
          FlexMessageDesignSystem.createText(`${points.toFixed(1)} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‚Ä¢ ‡πÄ‡∏™‡∏£‡πá‡∏à ${tasks} ‡∏á‡∏≤‡∏ô`, 'xs', FlexMessageDesignSystem.colors.textSecondary)
        );
      } else {
        content.push(
          FlexMessageDesignSystem.createText('', 'xs', FlexMessageDesignSystem.colors.textSecondary),
          FlexMessageDesignSystem.createText('üë§ ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô KPI', 'sm', FlexMessageDesignSystem.colors.textSecondary)
        );
      }

      const buttons = [
        FlexMessageDesignSystem.createButton(
          '‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
          'uri',
          `${config.baseUrl}/dashboard?groupId=${groupId}&view=leaderboard`,
          'primary'
        ),
        FlexMessageDesignSystem.createButton(
          '‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå',
          'postback',
          `action=view_weekly_stats&groupId=${groupId}`,
          'secondary'
        )
      ];

      const flexMessage = FlexMessageDesignSystem.createStandardTaskCard(
        'üèÜ ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö KPI ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ',
        'üìä',
        FlexMessageDesignSystem.colors.success,
        content,
        buttons,
        'compact'
      );

      return flexMessage;

    } catch (error) {
      logger.error('Error in leaderboard command:', error);
      return '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• KPI ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
    }
  }

  /**
   * ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /stats, /‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå - ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°
   */
  private async handleWeeklyStatsCommand(command: BotCommand): Promise<string | any> {
    try {
      const groupId = command.groupId;
      
      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
      const stats = await this.kpiService.getWeeklyStats(groupId);
      
      if (!stats) {
        return `üìä ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ

üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
üì± ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà`;
      }

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
      const content: any[] = [
        FlexMessageDesignSystem.createText('üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå', 'lg', FlexMessageDesignSystem.colors.primary, 'bold'),
        FlexMessageDesignSystem.createText('‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°', 'sm', FlexMessageDesignSystem.colors.textSecondary)
      ];

      // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏Å
      content.push(
        FlexMessageDesignSystem.createBox('horizontal', [
          FlexMessageDesignSystem.createText('üìã ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', 'sm', FlexMessageDesignSystem.colors.textPrimary),
          FlexMessageDesignSystem.createText(`${stats.totalTasks || 0} ‡∏á‡∏≤‡∏ô`, 'sm', FlexMessageDesignSystem.colors.primary)
        ]),
        FlexMessageDesignSystem.createBox('horizontal', [
          FlexMessageDesignSystem.createText('‚úÖ ‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à', 'sm', FlexMessageDesignSystem.colors.success),
          FlexMessageDesignSystem.createText(`${stats.completedTasks || 0} ‡∏á‡∏≤‡∏ô`, 'sm', FlexMessageDesignSystem.colors.success)
        ]),
        FlexMessageDesignSystem.createBox('horizontal', [
          FlexMessageDesignSystem.createText('‚è≥ ‡∏á‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏á', 'sm', FlexMessageDesignSystem.colors.warning),
          FlexMessageDesignSystem.createText(`${stats.pendingTasks || 0} ‡∏á‡∏≤‡∏ô`, 'sm', FlexMessageDesignSystem.colors.warning)
        ]),
        FlexMessageDesignSystem.createBox('horizontal', [
          FlexMessageDesignSystem.createText('üö® ‡∏á‡∏≤‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î', 'sm', FlexMessageDesignSystem.colors.danger),
          FlexMessageDesignSystem.createText(`${stats.overdueTasks || 0} ‡∏á‡∏≤‡∏ô`, 'sm', FlexMessageDesignSystem.colors.danger)
        ])
      );

      // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
      if (stats.topPerformer && stats.topPerformer !== '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•') {
        content.push(
          FlexMessageDesignSystem.createText('', 'xs', FlexMessageDesignSystem.colors.textSecondary),
          FlexMessageDesignSystem.createText('üèÜ ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î', 'sm', FlexMessageDesignSystem.colors.primary),
          FlexMessageDesignSystem.createText(stats.topPerformer, 'sm', FlexMessageDesignSystem.colors.textPrimary)
        );
      }

      // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢
      if (stats.avgCompletionTime && stats.avgCompletionTime > 0) {
        content.push(
          FlexMessageDesignSystem.createBox('horizontal', [
            FlexMessageDesignSystem.createText('‚è±Ô∏è ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢', 'sm', FlexMessageDesignSystem.colors.textPrimary),
            FlexMessageDesignSystem.createText(`${stats.avgCompletionTime} ‡∏ä‡∏°.`, 'sm', FlexMessageDesignSystem.colors.textPrimary)
          ])
        );
      }

      const buttons = [
        FlexMessageDesignSystem.createButton(
          '‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
          'uri',
          `${config.baseUrl}/dashboard?groupId=${groupId}&view=reports`,
          'primary'
        ),
        FlexMessageDesignSystem.createButton(
          '‡∏î‡∏π‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö KPI',
          'postback',
          `action=view_leaderboard&groupId=${groupId}`,
          'secondary'
        )
      ];

      const flexMessage = FlexMessageDesignSystem.createStandardTaskCard(
        'üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå',
        'üìà',
        FlexMessageDesignSystem.colors.info,
        content,
        buttons,
        'compact'
      );

      return flexMessage;

    } catch (error) {
      logger.error('Error in weekly stats command:', error);
      return '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
    }
  }
}