// Simple moment-timezone replacement for CSP compliance
(function() {
  'use strict';
  
  // Extend existing moment with timezone support
  if (typeof window !== 'undefined' && window.moment) {
    var moment = window.moment;
    
    // Enhanced timezone support
    var originalTz = moment.tz;
    moment.tz = function(input, timezone) {
      if (timezone === 'Asia/Bangkok') {
        var date = new Date(input);
        var utc = date.getTime() + (date.getTimezoneOffset() * 60000);
        var bangkokTime = new Date(utc + (7 * 3600000));
        return moment(bangkokTime);
      }
      return moment(input);
    };
    
    // Add timezone formatting to moment instances
    moment.fn.tz = function(timezone) {
      if (timezone === 'Asia/Bangkok') {
        return this.toLocaleString('th-TH', { 
          timeZone: 'Asia/Bangkok',
          year: 'numeric',
          month: '2-digit',
          day: '2-digit',
          hour: '2-digit',
          minute: '2-digit'
        });
      }
      return this.toLocaleString('th-TH');
    };
    
    // Add timezone conversion methods
    moment.fn.toBangkok = function() {
      var utc = this.getTime() + (this.getTimezoneOffset() * 60000);
      return moment(new Date(utc + (7 * 3600000)));
    };
    
    moment.fn.fromBangkok = function() {
      var bangkokTime = this.getTime() - (7 * 3600000);
      return moment(new Date(bangkokTime - (this.getTimezoneOffset() * 60000)));
    };
    
    console.log('✅ moment-timezone โหลดสำเร็จ (local version)');
  } else {
    console.warn('⚠️ moment.js ไม่ได้โหลด กรุณาตรวจสอบไฟล์ moment.min.js');
  }
})();
