// Simple moment.js replacement for CSP compliance
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('./locale')) :
  typeof define === 'function' && define.amd ? define(['./locale'], factory) :
  factory(global.moment)
}(this, (function (locale) { 'use strict';

  var moment = function (input, format, locale, strict) {
    return createLocal(input, format, locale, strict);
  };

  var createLocal = function (input, format, locale, strict) {
    return new Date(input);
  };

  moment.tz = function (input, timezone) {
    return new Date(input);
  };

  moment.tz.setDefault = function (timezone) {
    // No-op for compatibility
  };

  moment.utc = function (input) {
    return new Date(input);
  };

  moment.unix = function (timestamp) {
    return new Date(timestamp * 1000);
  };

  moment.format = function (date, format) {
    if (date instanceof Date) {
      return date.toLocaleString('th-TH');
    }
    return new Date().toLocaleString('th-TH');
  };

  if (typeof global !== 'undefined') {
    global.moment = moment;
  }
  if (typeof window !== 'undefined') {
    window.moment = moment;
  }

  return moment;
})));
