"use strict";
// Auto-Migration Utility
// ‡∏£‡∏±‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠ server ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ
Object.defineProperty(exports, "__esModule", { value: true });
exports.autoMigration = exports.AutoMigration = void 0;
const database_1 = require("./database");
const logger_1 = require("./logger");
const comprehensiveMigration_1 = require("./comprehensiveMigration");
class AutoMigration {
    constructor() {
        this.isRunning = false;
    }
    static getInstance() {
        if (!AutoMigration.instance) {
            AutoMigration.instance = new AutoMigration();
        }
        return AutoMigration.instance;
    }
    /**
     * ‡∏£‡∏±‡∏ô auto-migration ‡πÄ‡∏°‡∏∑‡πà‡∏≠ server ‡πÄ‡∏£‡∏¥‡πà‡∏°
     */
    async runAutoMigration() {
        if (this.isRunning) {
            logger_1.logger.info('üîÑ Auto-migration ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà...');
            return;
        }
        this.isRunning = true;
        try {
            logger_1.logger.info('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Auto-Migration...');
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if (!database_1.AppDataSource.isInitialized) {
                logger_1.logger.info('‚è≥ ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô...');
                return;
            }
            // Use comprehensive migration system
            await comprehensiveMigration_1.comprehensiveMigration.runComprehensiveMigration();
            logger_1.logger.info('‚úÖ Auto-Migration ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
        }
        catch (error) {
            logger_1.logger.error('‚ùå Auto-Migration ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
            // ‡πÑ‡∏°‡πà throw error ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ server ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
        }
        finally {
            this.isRunning = false;
        }
    }
    /**
     * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ô migration ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
     */
    async checkMigrationNeeded() {
        try {
            return await comprehensiveMigration_1.comprehensiveMigration.checkMigrationNeeded();
        }
        catch (error) {
            logger_1.logger.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö migration:', error);
            return false;
        }
    }
    /**
     * Get migration results for API endpoint
     */
    getMigrationResults() {
        return comprehensiveMigration_1.comprehensiveMigration.getMigrationResults();
    }
    // ... existing code ...
    // Legacy methods for backward compatibility
    // These are kept for any direct calls but delegate to comprehensive migration
    /**
     * @deprecated Use comprehensiveMigration instead
     */
    async migrateMissingColumns() {
        logger_1.logger.info('‚ÑπÔ∏è Legacy migrateMissingColumns called - delegating to comprehensive migration');
        // This is now handled by comprehensive migration
    }
    /**
     * @deprecated Use comprehensiveMigration instead
     */
    async migrateFileAttachmentType() {
        logger_1.logger.info('‚ÑπÔ∏è Legacy migrateFileAttachmentType called - delegating to comprehensive migration');
        // This is now handled by comprehensive migration
    }
    /**
     * @deprecated Use comprehensiveMigration instead
     */
    async initializeWorkflowData(queryRunner) {
        logger_1.logger.info('‚ÑπÔ∏è Legacy initializeWorkflowData called - delegating to comprehensive migration');
        // This is now handled by comprehensive migration
    }
}
exports.AutoMigration = AutoMigration;
exports.autoMigration = AutoMigration.getInstance();
//# sourceMappingURL=autoMigration.js.map