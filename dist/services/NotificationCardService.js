"use strict";
// Notification Card Service - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationCardService = void 0;
const LineService_1 = require("./LineService");
const UserService_1 = require("./UserService");
const FlexMessageDesignSystem_1 = require("./FlexMessageDesignSystem");
const logger_1 = require("@/utils/logger");
const uuid_1 = require("uuid");
class NotificationCardService {
    constructor() {
        this.lineService = new LineService_1.LineService();
        this.userService = new UserService_1.UserService();
    }
    /**
     * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà
     */
    async createNotificationCard(request) {
        try {
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
            this.validateNotificationRequest(request);
            const notificationCard = {
                id: (0, uuid_1.v4)(),
                title: request.title,
                description: request.description,
                imageUrl: request.imageUrl,
                buttons: request.buttons || [],
                targetType: request.targetType,
                groupIds: request.groupIds || [],
                userIds: request.userIds || [],
                priority: request.priority || 'medium',
                expiresAt: request.expiresAt,
                createdAt: new Date(),
                status: 'pending'
            };
            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)
            // await this.saveNotificationCard(notificationCard);
            logger_1.logger.info(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${notificationCard.id}`);
            return notificationCard;
        }
        catch (error) {
            logger_1.logger.error('‚ùå ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', error);
            throw error;
        }
    }
    /**
     * ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
     */
    async sendNotificationCard(notificationCard) {
        try {
            logger_1.logger.info(`üì§ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ${notificationCard.id}`);
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö LINE
            const flexMessage = this.createFlexMessage(notificationCard);
            let successCount = 0;
            let errorCount = 0;
            // ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°
            if (notificationCard.targetType === 'group' || notificationCard.targetType === 'both') {
                for (const groupId of notificationCard.groupIds || []) {
                    try {
                        await this.lineService.pushMessage(groupId, flexMessage);
                        successCount++;
                        logger_1.logger.info(`‚úÖ ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏° ${groupId} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
                    }
                    catch (error) {
                        errorCount++;
                        logger_1.logger.error(`‚ùå ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏° ${groupId} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:`, error);
                    }
                }
            }
            // ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
            if (notificationCard.targetType === 'user' || notificationCard.targetType === 'both') {
                for (const userId of notificationCard.userIds || []) {
                    try {
                        // ‡∏•‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å LINE User ID ‡∏Å‡πà‡∏≠‡∏ô (‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô LINE User ID)
                        let user = await this.userService.findByLineUserId(userId);
                        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å internal User ID
                        if (!user) {
                            user = await this.userService.findById(userId);
                        }
                        if (user && user.lineUserId) {
                            await this.lineService.pushMessage(user.lineUserId, flexMessage);
                            successCount++;
                            logger_1.logger.info(`‚úÖ ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ${userId} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
                        }
                        else {
                            errorCount++;
                            logger_1.logger.warn(`‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö LINE User ID ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ${userId}`);
                        }
                    }
                    catch (error) {
                        errorCount++;
                        logger_1.logger.error(`‚ùå ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ${userId} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:`, error);
                    }
                }
            }
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
            const status = errorCount === 0 ? 'sent' : (successCount > 0 ? 'sent' : 'failed');
            notificationCard.status = status;
            notificationCard.sentAt = new Date();
            logger_1.logger.info(`üìä ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ${successCount}, ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ${errorCount}`);
            return {
                success: successCount > 0,
                data: notificationCard,
                error: errorCount > 0 ? `‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ${successCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£, ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ${errorCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£` : undefined
            };
        }
        catch (error) {
            logger_1.logger.error('‚ùå ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', error);
            notificationCard.status = 'failed';
            return {
                success: false,
                data: notificationCard,
                error: error instanceof Error ? error.message : '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏'
            };
        }
    }
    /**
     * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
     */
    async createAndSendNotificationCard(request) {
        try {
            const notificationCard = await this.createNotificationCard(request);
            return await this.sendNotificationCard(notificationCard);
        }
        catch (error) {
            logger_1.logger.error('‚ùå ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', error);
            throw error;
        }
    }
    /**
     * ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö LINE
     */
    createFlexMessage(notificationCard) {
        const buttons = notificationCard.buttons.map(button => FlexMessageDesignSystem_1.FlexMessageDesignSystem.createButton(button.label, 'postback', JSON.stringify({
            action: button.action,
            notificationId: notificationCard.id,
            buttonId: button.id,
            ...button.data
        }), button.style || 'primary'));
        const content = [
            ...(notificationCard.description ? [FlexMessageDesignSystem_1.FlexMessageDesignSystem.createText(notificationCard.description, 'sm', FlexMessageDesignSystem_1.FlexMessageDesignSystem.colors.textPrimary, undefined, true)] : []),
            ...(notificationCard.imageUrl ? [{
                    type: 'image',
                    url: notificationCard.imageUrl,
                    size: 'full',
                    margin: FlexMessageDesignSystem_1.FlexMessageDesignSystem.padding.medium
                }] : [])
        ];
        return FlexMessageDesignSystem_1.FlexMessageDesignSystem.createStandardTaskCard(notificationCard.title, 'üì¢', this.getPriorityColor(notificationCard.priority), content, buttons, 'extraLarge');
    }
    /**
     * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
     */
    validateNotificationRequest(request) {
        if (!request.title || request.title.trim().length === 0) {
            throw new Error('‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏î‡πâ');
        }
        if (request.title.length > 100) {
            throw new Error('‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 100 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£');
        }
        if (request.description && request.description.length > 1000) {
            throw new Error('‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 1000 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£');
        }
        if (request.targetType === 'group' && (!request.groupIds || request.groupIds.length === 0)) {
            throw new Error('‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏Å‡∏•‡∏∏‡πà‡∏°');
        }
        if (request.targetType === 'user' && (!request.userIds || request.userIds.length === 0)) {
            throw new Error('‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏Ñ‡∏ô');
        }
        if (request.targetType === 'both' &&
            (!request.groupIds || request.groupIds.length === 0) &&
            (!request.userIds || request.userIds.length === 0)) {
            throw new Error('‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
        }
        if (request.buttons && request.buttons.length > 4) {
            throw new Error('‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Å‡∏¥‡∏ô 4 ‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ (‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ç‡∏≠‡∏á LINE)');
        }
        if (request.expiresAt && request.expiresAt <= new Date()) {
            throw new Error('‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï');
        }
    }
    /**
     * ‡πÑ‡∏î‡πâ‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
     */
    getPriorityColor(priority) {
        switch (priority) {
            case 'high':
                return FlexMessageDesignSystem_1.FlexMessageDesignSystem.colors.danger;
            case 'medium':
                return FlexMessageDesignSystem_1.FlexMessageDesignSystem.colors.warning;
            case 'low':
                return FlexMessageDesignSystem_1.FlexMessageDesignSystem.colors.success;
            default:
                return FlexMessageDesignSystem_1.FlexMessageDesignSystem.colors.primary;
        }
    }
    /**
     * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
     */
    createStandardButtons() {
        return [
            {
                id: 'add_task',
                label: '‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô',
                action: 'add_task',
                style: 'primary'
            },
            {
                id: 'close_task',
                label: '‚úÖ ‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô',
                action: 'close_task',
                style: 'secondary'
            },
            {
                id: 'request_extension',
                label: '‚è∞ ‡∏Ç‡∏≠‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤',
                action: 'request_extension',
                style: 'secondary'
            },
            {
                id: 'view_details',
                label: 'üëÅÔ∏è ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î',
                action: 'view_details',
                style: 'secondary'
            }
        ];
    }
    /**
     * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
     */
    createApprovalButtons() {
        return [
            {
                id: 'approve',
                label: '‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
                action: 'approve',
                style: 'primary'
            },
            {
                id: 'reject',
                label: '‚ùå ‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
                action: 'reject',
                style: 'danger'
            },
            {
                id: 'view_details',
                label: 'üëÅÔ∏è ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î',
                action: 'view_details',
                style: 'secondary'
            }
        ];
    }
}
exports.NotificationCardService = NotificationCardService;
//# sourceMappingURL=NotificationCardService.js.map