// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô ensureExtension
function ensureExtension(name, mimeType) {
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  const hasExt = /\.[A-Za-z0-9]{1,8}$/i.test(name);
  if (hasExt) return name;
  
  const map = {
    'image/jpeg': '.jpg',
    'image/jpg': '.jpg',
    'image/png': '.png',
    'image/gif': '.gif',
    'image/webp': '.webp',
    'video/mp4': '.mp4',
    'video/quicktime': '.mov',
    'audio/mpeg': '.mp3',
    'audio/wav': '.wav',
    'application/pdf': '.pdf',
    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': '.docx',
    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': '.xlsx',
    'application/vnd.openxmlformats-officedocument.presentationml.presentation': '.pptx',
    'text/plain': '.txt',
    'text/html': '.html',
    'text/css': '.css',
    'text/javascript': '.js',
    'application/json': '.json',
    'application/xml': '.xml',
    'application/octet-stream': '.bin'
  };
  const ext = map[mimeType] || '.bin';
  return name + ext;
}

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡∏ï‡πà‡∏≤‡∏á‡πÜ
const testCases = [
  { name: 'document_12345678', mimeType: 'application/pdf', expected: 'document_12345678.pdf' },
  { name: 'image_87654321', mimeType: 'image/jpeg', expected: 'image_87654321.jpg' },
  { name: 'video_abcdef12', mimeType: 'video/mp4', expected: 'video_abcdef12.mp4' },
  { name: 'file_xyz78901', mimeType: 'application/octet-stream', expected: 'file_xyz78901.bin' },
  { name: 'test.pdf', mimeType: 'application/pdf', expected: 'test.pdf' }, // ‡∏°‡∏µ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡πÅ‡∏•‡πâ‡∏ß
  { name: 'image.jpg', mimeType: 'image/jpeg', expected: 'image.jpg' }, // ‡∏°‡∏µ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡πÅ‡∏•‡πâ‡∏ß
  { name: '', mimeType: 'application/pdf', expected: '.pdf' }, // ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏á
  { name: 'file_123', mimeType: 'unknown/mime', expected: 'file_123.bin' } // mime type ‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å
];

console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô ensureExtension');
console.log('=====================================');

testCases.forEach((testCase, index) => {
  const result = ensureExtension(testCase.name, testCase.mimeType);
  const status = result === testCase.expected ? '‚úÖ' : '‚ùå';
  
  console.log(`\nüìã Test Case ${index + 1}:`);
  console.log(`   Input: name="${testCase.name}", mimeType="${testCase.mimeType}"`);
  console.log(`   Expected: ${testCase.expected}`);
  console.log(`   Result: ${result}`);
  console.log(`   Status: ${status}`);
  
  if (result !== testCase.expected) {
    console.log(`   ‚ùå FAILED: Expected "${testCase.expected}" but got "${result}"`);
  }
});

console.log('\nüìù ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
console.log('- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô ensureExtension ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏≤‡∏° mimeType');
console.log('- ‡∏ñ‡πâ‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ã‡πâ‡∏≥');
console.log('- ‡∏ñ‡πâ‡∏≤ mimeType ‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ .bin ‡πÄ‡∏õ‡πá‡∏ô default');
